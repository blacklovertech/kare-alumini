datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model UserProfile {
  address        String?
  bloodGroup     EnumUserProfileBloodGroup?
  createdAt      DateTime                   @default(now())
  currentCompany String?
  currentRole    String?
  deptOfStudy    String?
  email          String?
  githubUrl      String?
  id             String                     @id @default(cuid())
  instagramUrl   String?
  linkedInUrl    String?
  moreAboutUser  String?
  name           String?
  notifications  Boolean?
  passesOutYear  Int?
  phoneNumber    String?
  postEvents     Boolean?
  postNews       Boolean?
  regNo          String?
  updatedAt      DateTime                   @updatedAt
}

model NetworkingTools {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Donation {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Event {
  createdAt          DateTime            @default(now())
  eventRegistrations EventRegistration[]
  id                 String              @id @default(cuid())
  updatedAt          DateTime            @updatedAt
}

model JobBoard {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model ResourceLibrary {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Geolocation {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model NewsAnnouncement {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model DiscussionForum {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model MentorshipProgram {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}

model Admin {
  createdAt   DateTime       @default(now())
  email       String?
  id          String         @id @default(cuid())
  isActive    Boolean?
  lastLogin   DateTime?
  name        String?
  password    String?
  phoneNumber String?
  role        EnumAdminRole?
  updatedAt   DateTime       @updatedAt
}

model Job {
  applicationUrl String?
  company        String?
  createdAt      DateTime @default(now())
  description    String?
  id             String   @id @default(cuid())
  title          String?
  updatedAt      DateTime @updatedAt
}

model News {
  content       String?
  createdAt     DateTime  @default(now())
  datePublished DateTime?
  id            String    @id @default(cuid())
  title         String?
  updatedAt     DateTime  @updatedAt
}

model User {
  createdAt          DateTime            @default(now())
  email              String?             @unique
  eventRegistrations EventRegistration[]
  firstName          String?
  id                 String              @id @default(cuid())
  lastName           String?
  password           String
  profiles           Profile[]
  roles              Json
  updatedAt          DateTime            @updatedAt
  userRoles          UserRole[]
  username           String              @unique
}

model EventItem {
  createdAt   DateTime  @default(now())
  date        DateTime?
  description String?
  id          String    @id @default(cuid())
  location    String?
  name        String?
  updatedAt   DateTime  @updatedAt
}

model Message {
  createdAt  DateTime  @default(now())
  id         String    @id @default(cuid())
  receiverId String?
  senderId   String?
  sentAt     DateTime?
  text       String?
  updatedAt  DateTime  @updatedAt
}

model Role {
  createdAt DateTime   @default(now())
  id        String     @id @default(cuid())
  roleName  String?
  updatedAt DateTime   @updatedAt
  userRoles UserRole[]
}

model UserRole {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  role      Role?    @relation(fields: [roleId], references: [id])
  roleId    String?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model EventRegistration {
  createdAt DateTime                     @default(now())
  event     Event?                       @relation(fields: [eventId], references: [id])
  eventId   String?
  id        String                       @id @default(cuid())
  status    EnumEventRegistrationStatus?
  updatedAt DateTime                     @updatedAt
  user      User?                        @relation(fields: [userId], references: [id])
  userId    String?
}

model Profile {
  bio         String?
  createdAt   DateTime @default(now())
  id          String   @id @default(cuid())
  socialLinks Json?
  updatedAt   DateTime @updatedAt
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
}

model Notification {
  createdAt   DateTime @default(now())
  id          String   @id @default(cuid())
  message     String?
  read        Boolean?
  recipientId String?
  updatedAt   DateTime @updatedAt
}

enum EnumUserProfileBloodGroup {
  Option1
}

enum EnumAdminRole {
  Option1
}

enum EnumEventRegistrationStatus {
  Option1
}
