/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  MentorshipProgram as PrismaMentorshipProgram,
} from "@prisma/client";

export class MentorshipProgramServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MentorshipProgramCountArgs, "select">
  ): Promise<number> {
    return this.prisma.mentorshipProgram.count(args);
  }

  async mentorshipPrograms(
    args: Prisma.MentorshipProgramFindManyArgs
  ): Promise<PrismaMentorshipProgram[]> {
    return this.prisma.mentorshipProgram.findMany(args);
  }
  async mentorshipProgram(
    args: Prisma.MentorshipProgramFindUniqueArgs
  ): Promise<PrismaMentorshipProgram | null> {
    return this.prisma.mentorshipProgram.findUnique(args);
  }
  async createMentorshipProgram(
    args: Prisma.MentorshipProgramCreateArgs
  ): Promise<PrismaMentorshipProgram> {
    return this.prisma.mentorshipProgram.create(args);
  }
  async updateMentorshipProgram(
    args: Prisma.MentorshipProgramUpdateArgs
  ): Promise<PrismaMentorshipProgram> {
    return this.prisma.mentorshipProgram.update(args);
  }
  async deleteMentorshipProgram(
    args: Prisma.MentorshipProgramDeleteArgs
  ): Promise<PrismaMentorshipProgram> {
    return this.prisma.mentorshipProgram.delete(args);
  }
}
