/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, JobBoard as PrismaJobBoard } from "@prisma/client";

export class JobBoardServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.JobBoardCountArgs, "select">): Promise<number> {
    return this.prisma.jobBoard.count(args);
  }

  async jobBoards(
    args: Prisma.JobBoardFindManyArgs
  ): Promise<PrismaJobBoard[]> {
    return this.prisma.jobBoard.findMany(args);
  }
  async jobBoard(
    args: Prisma.JobBoardFindUniqueArgs
  ): Promise<PrismaJobBoard | null> {
    return this.prisma.jobBoard.findUnique(args);
  }
  async createJobBoard(
    args: Prisma.JobBoardCreateArgs
  ): Promise<PrismaJobBoard> {
    return this.prisma.jobBoard.create(args);
  }
  async updateJobBoard(
    args: Prisma.JobBoardUpdateArgs
  ): Promise<PrismaJobBoard> {
    return this.prisma.jobBoard.update(args);
  }
  async deleteJobBoard(
    args: Prisma.JobBoardDeleteArgs
  ): Promise<PrismaJobBoard> {
    return this.prisma.jobBoard.delete(args);
  }
}
