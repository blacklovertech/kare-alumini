/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Geolocation as PrismaGeolocation } from "@prisma/client";

export class GeolocationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GeolocationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.geolocation.count(args);
  }

  async geolocations(
    args: Prisma.GeolocationFindManyArgs
  ): Promise<PrismaGeolocation[]> {
    return this.prisma.geolocation.findMany(args);
  }
  async geolocation(
    args: Prisma.GeolocationFindUniqueArgs
  ): Promise<PrismaGeolocation | null> {
    return this.prisma.geolocation.findUnique(args);
  }
  async createGeolocation(
    args: Prisma.GeolocationCreateArgs
  ): Promise<PrismaGeolocation> {
    return this.prisma.geolocation.create(args);
  }
  async updateGeolocation(
    args: Prisma.GeolocationUpdateArgs
  ): Promise<PrismaGeolocation> {
    return this.prisma.geolocation.update(args);
  }
  async deleteGeolocation(
    args: Prisma.GeolocationDeleteArgs
  ): Promise<PrismaGeolocation> {
    return this.prisma.geolocation.delete(args);
  }
}
