/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  DiscussionForum as PrismaDiscussionForum,
} from "@prisma/client";

export class DiscussionForumServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DiscussionForumCountArgs, "select">
  ): Promise<number> {
    return this.prisma.discussionForum.count(args);
  }

  async discussionForums(
    args: Prisma.DiscussionForumFindManyArgs
  ): Promise<PrismaDiscussionForum[]> {
    return this.prisma.discussionForum.findMany(args);
  }
  async discussionForum(
    args: Prisma.DiscussionForumFindUniqueArgs
  ): Promise<PrismaDiscussionForum | null> {
    return this.prisma.discussionForum.findUnique(args);
  }
  async createDiscussionForum(
    args: Prisma.DiscussionForumCreateArgs
  ): Promise<PrismaDiscussionForum> {
    return this.prisma.discussionForum.create(args);
  }
  async updateDiscussionForum(
    args: Prisma.DiscussionForumUpdateArgs
  ): Promise<PrismaDiscussionForum> {
    return this.prisma.discussionForum.update(args);
  }
  async deleteDiscussionForum(
    args: Prisma.DiscussionForumDeleteArgs
  ): Promise<PrismaDiscussionForum> {
    return this.prisma.discussionForum.delete(args);
  }
}
